name: Build

on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    env: 
      CAMINHO_PROJETO: ./aspnet-webapi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with: 
          dotnet-version: 3.1.402
      - name: Install dependencies
        run: dotnet restore ${{ env.CAMINHO_PROJETO }}
      - name: Build 
        run: dotnet build ${{ env.CAMINHO_PROJETO }} --configuration Release --no-restore
      - name: Tests 
        run: dotnet test ${{ env.CAMINHO_PROJETO }} --verbosity minimal
        
  deploy-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: fabiobaia.com  
    needs: build
    steps:
      - name: Faz de conta q ta fazendo deploy num ambiente intermedi√°rio
        run: echo Deploy DEV
    
  heroku-deploy:
    runs-on: ubuntu-latest
    environment:
      name: hml
      url: fabio-baia-teste-github-action@heroku.com
    needs: deploy-dev
    steps:
    - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
      uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
      with:
        email: ${{ secrets.HEROKU_EMAIL }}
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

        # (Optional, default: "./")
        # Dockerfile directory.
        # For example, if you have a Dockerfile in the root of your project, leave it as follows:
        dockerfile_directory: ./
        dockerfile_name: Dockerfile

        # (Optional, default: "")
        # Additional options of docker build command.
        docker_options: "--no-cache"

        # (Optional, default: "web")
        # Select the process type for which you want the docker container to be uploaded.
        # By default, this argument is set to "web".
        # For more information look at https://devcenter.heroku.com/articles/process-model
        process_type: web
      
    
